{"version":3,"sources":["utils.ts"],"names":["findProviderDef","value","Object","values","BackendProviders","find","p","name","module","aliases","includes","parseModel","ValueError","providerId","rest","split","modelId","join","providerDef","loadModel","type","capitalize"],"mappings":";;;;;;;;AAuBA,SAASA,gBAAgBC,KAAa,EAAA;AACpC,EAAA,OACEC,OAAOC,MAAOC,CAAAA,8BAAAA,EAAkBC,IAC9B,CAAA,CAACC,MAAMA,CAAEC,CAAAA,IAAAA,KAASN,KAASK,IAAAA,CAAAA,CAAEE,WAAWP,KAASK,IAAAA,CAAAA,CAAEG,QAAQC,QAAST,CAAAA,KAAAA,CAAAA,CACjE,IAAA,IAAA;AAET;AANSD,MAAAA,CAAAA,eAAAA,EAAAA,iBAAAA,CAAAA;AAQF,SAASW,WAAWJ,IAAY,EAAA;AACrC,EAAA,IAAI,CAACA,IAAM,EAAA;AACT,IAAM,MAAA,IAAIK,sBAAW,wDAAA,CAAA;AACvB;AACA,EAAA,MAAM,CAACC,UAAY,EAAA,GAAGC,IAAAA,CAAQP,GAAAA,IAAAA,CAAKQ,MAAM,GAAA,CAAA;AACzC,EAAMC,MAAAA,OAAAA,GAAUF,IAAKG,CAAAA,IAAAA,CAAK,GAAA,CAAA;AAE1B,EAAMC,MAAAA,WAAAA,GAAclB,gBAAgBa,UAAAA,CAAAA;AACpC,EAAA,IAAI,CAACK,WAAa,EAAA;AAChB,IAAM,MAAA,IAAIN,sBAAW,uCAAA,CAAA;AACvB;AACA,EAAO,OAAA;AAAEC,IAAAA,UAAAA;AAAYG,IAAAA,OAAAA;AAASE,IAAAA;AAAY,GAAA;AAC5C;AAZgBP,MAAAA,CAAAA,UAAAA,EAAAA,YAAAA,CAAAA;AAchB,eAAsBQ,SAAAA,CACpBZ,MACAa,IAA0B,EAAA;AAE1B,EAAA,MAAM,EAAEF,WAAAA,EAAgBP,GAAAA,UAAAA,CAAWJ,IAAAA,CAAAA;AACnC,EAAA,MAAMC,SAAS,MAAM,OAAO,4BAA4BU,WAAYV,CAAAA,MAAM,YAAYY,IAAAA,CAAAA,CAAAA,CAAAA;AACtF,EAAOZ,OAAAA,MAAAA,CAAO,GAAGU,WAAYX,CAAAA,IAAI,GAAGc,iBAAWD,CAAAA,IAAAA,CAAAA,CAAY,KAAA,CAAA,CAAA;AAC7D;AAPsBD,MAAAA,CAAAA,SAAAA,EAAAA,WAAAA,CAAAA","file":"utils.cjs","sourcesContent":["/**\n * Copyright 2025 IBM Corp.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ValueError } from \"@/errors.js\";\nimport { ClassConstructor } from \"@/internals/types.js\";\nimport { BackendProviders, ProviderDef, ProviderName } from \"@/backend/constants.js\";\nimport { capitalize } from \"remeda\";\n\nexport type FullModelName = `${ProviderName}:${string}`;\n\nfunction findProviderDef(value: string): ProviderDef | null {\n  return (\n    Object.values(BackendProviders).find(\n      (p) => p.name === value || p.module === value || p.aliases.includes(value),\n    ) ?? null\n  );\n}\n\nexport function parseModel(name: string) {\n  if (!name) {\n    throw new ValueError(\"Neither 'provider' nor 'provider:model' was specified.\");\n  }\n  const [providerId, ...rest] = name.split(\":\") as [ProviderName, ...string[]];\n  const modelId = rest.join(\":\");\n\n  const providerDef = findProviderDef(providerId);\n  if (!providerDef) {\n    throw new ValueError(\"Model does not contain provider name!\");\n  }\n  return { providerId, modelId, providerDef };\n}\n\nexport async function loadModel<T>(\n  name: ProviderName | FullModelName,\n  type: \"embedding\" | \"chat\",\n): Promise<ClassConstructor<T>> {\n  const { providerDef } = parseModel(name);\n  const module = await import(`beeai-framework/adapters/${providerDef.module}/backend/${type}`);\n  return module[`${providerDef.name}${capitalize(type)}Model`];\n}\n"]}